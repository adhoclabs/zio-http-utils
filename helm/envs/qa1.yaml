cluster:
  namespace: qa1

image:
  tag: "@sha256:97934dfc33064115468dfc2c03c06cf514898dd8bea6a9ad5d206d6be73916f5"

awsSettings:
  iamRole: qa1-zio-http-poc-service-sa
  region: us-west-2

appSettings:
  javaOpts: "-Dconfig.file=/var/lib/gen_config/application_gen.conf -XX:+UseG1GC -Xms256m -Xmx1g"
  replicas: 2
  exampleSecretId: qa1-zio-http-poc-secret-shhhh
  db:
    hostname: qa1-zio-http-poc-rds
    password: qa1-zio-http-poc-db-password
  resources:
    requests:
      cpu: "250m"
      memory: "256Mi"
    limits:
      cpu: "2000m"
      memory: "1124Mi"

configMap:
  preserveOldReleases: true

# General good practice to have at least one non-prod env YAML have the same 'shape' as the prod YAML ( at least
# as much as reasonably possible ) so we can be sure we're exercising the same codepaths when doing a helm release.
# As such, lets make sure the argoStrategy section that gets entirely copied into the rollout has a full set of
# _some_ defined 'steps'.
argoStrategy:
  canary:
    antiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        weight: 1
    maxSurge: "100%"
    maxUnavailable: "0"
    steps:
    - setWeight: 50
    - pause:
        duration: 15s
