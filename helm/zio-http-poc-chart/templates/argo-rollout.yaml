apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: zio-http-poc-service
  namespace: {{ .Values.cluster.namespace }}
  {{- if .Values.datadog.enabled }}
  labels:
    tags.datadoghq.com/env: {{ .Values.cluster.namespace }}
    tags.datadoghq.com/service: zio-http-poc-service
    tags.datadoghq.com/version: {{ .Chart.Version | quote }}
  {{- end }}
spec:
  replicas: {{ .Values.appSettings.replicas }}
  selector:
    matchLabels:
      app: zio-http-poc-service
  template:
    metadata:
      labels:
        app: zio-http-poc-service
        {{- if .Values.datadog.enabled }}
        tags.datadoghq.com/env: {{ .Values.cluster.namespace }}
        tags.datadoghq.com/service: zio-http-poc-service
        tags.datadoghq.com/version: {{ .Chart.Version | quote }}
        {{- end }}
    spec:
      serviceAccountName: business-service
      containers:
      - name: nginx
        image: "nginx{{ .Values.image.nginxTag }}"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: {{ .Values.nginxSettings.port }}
        resources:
          {{- toYaml .Values.nginxSettings.resources | nindent 10 }}
        volumeMounts:
        - mountPath: /etc/nginx/conf.d
          name: nginx-config
      - name: zio-http-poc-service
        image: "{{ .Values.image.repo }}{{ .Values.image.tag }}"
        imagePullPolicy: IfNotPresent
        envFrom:
          - configMapRef:
              name: zio-http-poc-service-env-{{ include "zio-http-poc-chart.cm-suffix" . }}
        ports:
        - containerPort: {{ .Values.appSettings.port }}
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /health/api
            port: {{ .Values.nginxSettings.port }}
            scheme: HTTP
          periodSeconds: 10
          initialDelaySeconds: 10
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /health/api
            port: {{ .Values.nginxSettings.port }}
            scheme: HTTP
          periodSeconds: 5
          initialDelaySeconds: 5
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 1
        resources:
          {{- toYaml .Values.appSettings.resources | nindent 10 }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/gen_config/
          name: config-volume
        {{- if .Values.datadog.enabled }}
        - mountPath: /var/run/datadog
          name: apmsocketpath
        {{- end }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: zio-http-poc-service-app-dot-conf-{{ include "zio-http-poc-chart.cm-suffix" . }}
        name: config-volume
      - configMap:
          defaultMode: 420
          name: nginx-zio-http-poc-service
        name: nginx-config
      {{- if .Values.datadog.enabled }}
      - hostPath:
          path: /var/run/datadog/
        name: apmsocketpath
      {{- end }}

  minReadySeconds: 0
  revisionHistoryLimit: 2
  strategy:
    {{- toYaml .Values.argoStrategy | nindent 4 }}
